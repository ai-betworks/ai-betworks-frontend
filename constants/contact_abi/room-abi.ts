export const roomAddress = "0x822543be8732d116821bd51eca7616f6b3bd5575";

export const roomAbi = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  { type: "receive", stateMutability: "payable" },
  {
    type: "function",
    inputs: [],
    name: "PROCESSING_DURATION",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "activeAgents",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "agent", internalType: "address", type: "address" }],
    name: "addAgent",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "agentData",
    outputs: [
      { name: "feeRecipient", internalType: "address", type: "address" },
      { name: "coreId", internalType: "uint256", type: "uint256" },
      { name: "active", internalType: "bool", type: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "roundId", internalType: "uint256", type: "uint256" },
      { name: "user", internalType: "address", type: "address" },
    ],
    name: "calculateWinnings",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "roundId", internalType: "uint256", type: "uint256" }],
    name: "claimWinnings",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "core",
    outputs: [{ name: "", internalType: "address payable", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "creator",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "currentAgentCount",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "currentRoundId",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "feeBalance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "fees",
    outputs: [
      { name: "roomEntryFee", internalType: "uint256", type: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "gameMaster",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "roundId", internalType: "uint256", type: "uint256" },
      { name: "agent", internalType: "address", type: "address" },
    ],
    name: "getAgentPosition",
    outputs: [
      {
        name: "",
        internalType: "struct Room.AgentPosition",
        type: "tuple",
        components: [
          { name: "buyPool", internalType: "uint256", type: "uint256" },
          { name: "hold", internalType: "uint256", type: "uint256" },
          { name: "sell", internalType: "uint256", type: "uint256" },
          {
            name: "decision",
            internalType: "enum Room.BetType",
            type: "uint8",
          },
          { name: "hasDecided", internalType: "bool", type: "bool" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "roundId", internalType: "uint256", type: "uint256" },
      { name: "user", internalType: "address", type: "address" },
    ],
    name: "getHasClaimedWinnings",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "roundId", internalType: "uint256", type: "uint256" },
      { name: "agent", internalType: "address", type: "address" },
    ],
    name: "getPvpStatuses",
    outputs: [
      {
        name: "",
        internalType: "struct Room.PvpStatus[]",
        type: "tuple[]",
        components: [
          { name: "verb", internalType: "string", type: "string" },
          { name: "instigator", internalType: "address", type: "address" },
          { name: "endTime", internalType: "uint40", type: "uint40" },
          { name: "parameters", internalType: "bytes", type: "bytes" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "getRoomFees",
    outputs: [
      {
        name: "",
        internalType: "struct Room.RoomFees",
        type: "tuple",
        components: [
          { name: "roomEntryFee", internalType: "uint256", type: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "roundId", internalType: "uint256", type: "uint256" }],
    name: "getRoundEndTime",
    outputs: [{ name: "", internalType: "uint40", type: "uint40" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "roundId", internalType: "uint256", type: "uint256" }],
    name: "getRoundStartTime",
    outputs: [{ name: "", internalType: "uint40", type: "uint40" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "roundId", internalType: "uint256", type: "uint256" }],
    name: "getRoundState",
    outputs: [
      { name: "", internalType: "enum Room.RoundState", type: "uint8" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "roundId", internalType: "uint256", type: "uint256" },
      { name: "user", internalType: "address", type: "address" },
    ],
    name: "getUserBet",
    outputs: [
      {
        name: "",
        internalType: "struct Room.UserBet",
        type: "tuple",
        components: [
          { name: "bettype", internalType: "enum Room.BetType", type: "uint8" },
          { name: "amount", internalType: "uint256", type: "uint256" },
          { name: "refunded", internalType: "bool", type: "bool" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "_gameMaster", internalType: "address", type: "address" },
      { name: "_token", internalType: "address", type: "address" },
      { name: "_creator", internalType: "address", type: "address" },
      { name: "_core", internalType: "address", type: "address" },
      { name: "_roomEntryFee", internalType: "uint256", type: "uint256" },
      { name: "_initialAgents", internalType: "address[]", type: "address[]" },
      {
        name: "_initialAgentFeeRecipients",
        internalType: "address[]",
        type: "address[]",
      },
      {
        name: "_initialAgentIds",
        internalType: "uint256[]",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "target", internalType: "address", type: "address" },
      { name: "verb", internalType: "string", type: "string" },
      { name: "parameters", internalType: "bytes", type: "bytes" },
    ],
    name: "invokePvpAction",
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [],
    name: "maxAgents",
    outputs: [{ name: "", internalType: "uint32", type: "uint32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "agent", internalType: "address", type: "address" },
      { name: "betType", internalType: "enum Room.BetType", type: "uint8" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "placeBet",
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    inputs: [],
    name: "pvpEnabled",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "agent", internalType: "address", type: "address" }],
    name: "removeAgent",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "resolveMarket",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "roundDuration",
    outputs: [{ name: "", internalType: "uint40", type: "uint40" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "rounds",
    outputs: [
      { name: "state", internalType: "enum Room.RoundState", type: "uint8" },
      { name: "startTime", internalType: "uint40", type: "uint40" },
      { name: "endTime", internalType: "uint40", type: "uint40" },
      { name: "totalFees", internalType: "uint256", type: "uint256" },
      { name: "totalBetsBuy", internalType: "uint256", type: "uint256" },
      { name: "totalBetsHold", internalType: "uint256", type: "uint256" },
      { name: "totalBetsSell", internalType: "uint256", type: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [
      { name: "newState", internalType: "enum Room.RoundState", type: "uint8" },
    ],
    name: "setCurrentRoundState",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [],
    name: "startRound",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "agent", internalType: "address", type: "address" },
      { name: "decision", internalType: "enum Room.BetType", type: "uint8" },
    ],
    name: "submitAgentDecision",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "string", type: "string" }],
    name: "supportedPvpActions",
    outputs: [
      { name: "verb", internalType: "string", type: "string" },
      {
        name: "category",
        internalType: "enum Room.PvpActionCategory",
        type: "uint8",
      },
      { name: "fee", internalType: "uint256", type: "uint256" },
      { name: "duration", internalType: "uint32", type: "uint32" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "supportedPvpVerbs",
    outputs: [{ name: "", internalType: "string", type: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [],
    name: "token",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "roomEntryFee", internalType: "uint256", type: "uint256" },
    ],
    name: "updateFees",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [{ name: "newDuration", internalType: "uint40", type: "uint40" }],
    name: "updateRoundDuration",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    inputs: [
      { name: "verb", internalType: "string", type: "string" },
      {
        name: "category",
        internalType: "enum Room.PvpActionCategory",
        type: "uint8",
      },
      { name: "fee", internalType: "uint256", type: "uint256" },
      { name: "duration", internalType: "uint32", type: "uint32" },
    ],
    name: "updateSupportedPvpActions",
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "agent",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "AgentAdded",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "roundId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      {
        name: "agent",
        internalType: "address",
        type: "address",
        indexed: false,
      },
      {
        name: "betType",
        internalType: "enum Room.BetType",
        type: "uint8",
        indexed: false,
      },
    ],
    name: "AgentDecisionSubmitted",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "agent",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "AgentRemoved",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "roundId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      {
        name: "agent",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "betType",
        internalType: "enum Room.BetType",
        type: "uint8",
        indexed: false,
      },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "BetPlaced",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "roundId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
    ],
    name: "FeesDistributed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "roomEntryFee",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "FeesUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "roundId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
    ],
    name: "JoinedRoom",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "roundId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
    ],
    name: "MarketResolved",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "previousOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnershipTransferred",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "verb", internalType: "string", type: "string", indexed: true },
      {
        name: "target",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "endTime",
        internalType: "uint40",
        type: "uint40",
        indexed: false,
      },
      {
        name: "parameters",
        internalType: "bytes",
        type: "bytes",
        indexed: false,
      },
    ],
    name: "PvpActionInvoked",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "verb", internalType: "string", type: "string", indexed: true },
    ],
    name: "PvpActionRemoved",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "verb", internalType: "string", type: "string", indexed: true },
      {
        name: "category",
        internalType: "enum Room.PvpActionCategory",
        type: "uint8",
        indexed: true,
      },
      { name: "fee", internalType: "uint256", type: "uint256", indexed: false },
      {
        name: "duration",
        internalType: "uint32",
        type: "uint32",
        indexed: false,
      },
      { name: "isNew", internalType: "bool", type: "bool", indexed: false },
      { name: "isUpdate", internalType: "bool", type: "bool", indexed: false },
    ],
    name: "PvpActionsUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "oldDuration",
        internalType: "uint40",
        type: "uint40",
        indexed: false,
      },
      {
        name: "newDuration",
        internalType: "uint40",
        type: "uint40",
        indexed: false,
      },
    ],
    name: "RoundDurationUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "roundId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      {
        name: "startTime",
        internalType: "uint40",
        type: "uint40",
        indexed: false,
      },
      {
        name: "endTime",
        internalType: "uint40",
        type: "uint40",
        indexed: false,
      },
    ],
    name: "RoundStarted",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "currentRoundId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      {
        name: "state",
        internalType: "enum Room.RoundState",
        type: "uint8",
        indexed: false,
      },
    ],
    name: "RoundStateUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "roundId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "winnings",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "WinningsClaimed",
  },
  {
    type: "error",
    inputs: [{ name: "owner", internalType: "address", type: "address" }],
    name: "OwnableInvalidOwner",
  },
  {
    type: "error",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "OwnableUnauthorizedAccount",
  },
  { type: "error", inputs: [], name: "ReentrancyGuardReentrantCall" },
  { type: "error", inputs: [], name: "Room_ActionNotSupported" },
  { type: "error", inputs: [], name: "Room_AgentAlreadyDecided" },
  { type: "error", inputs: [], name: "Room_AgentAlreadyExists" },
  {
    type: "error",
    inputs: [{ name: "agent", internalType: "address", type: "address" }],
    name: "Room_AgentNotActive",
  },
  {
    type: "error",
    inputs: [{ name: "agent", internalType: "address", type: "address" }],
    name: "Room_AgentNotExists",
  },
  { type: "error", inputs: [], name: "Room_InvalidAmount" },
  { type: "error", inputs: [], name: "Room_InvalidBetType" },
  { type: "error", inputs: [], name: "Room_InvalidFee" },
  { type: "error", inputs: [], name: "Room_InvalidPvpAction" },
  { type: "error", inputs: [], name: "Room_InvalidRoundDuration" },
  { type: "error", inputs: [], name: "Room_MaxAgentsReached" },
  { type: "error", inputs: [], name: "Room_NoWinnings" },
  { type: "error", inputs: [], name: "Room_NotAuthorized" },
  { type: "error", inputs: [], name: "Room_NotCreator" },
  { type: "error", inputs: [], name: "Room_NotGameMaster" },
  { type: "error", inputs: [], name: "Room_NotGameMasterOrCreator" },
  {
    type: "error",
    inputs: [
      { name: "currentRoundId", internalType: "uint256", type: "uint256" },
    ],
    name: "Room_RoundNotClosed",
  },
  {
    type: "error",
    inputs: [
      { name: "expected", internalType: "enum Room.RoundState", type: "uint8" },
      { name: "actual", internalType: "enum Room.RoundState", type: "uint8" },
    ],
    name: "Room_RoundNotExpectedStatus",
  },
  { type: "error", inputs: [], name: "Room_SenderAlreadyClaimedWinnings" },
  { type: "error", inputs: [], name: "Room_SenderHasNoBetInRound" },
  {
    type: "error",
    inputs: [
      { name: "verb", internalType: "string", type: "string" },
      { name: "target", internalType: "address", type: "address" },
      { name: "endTime", internalType: "uint40", type: "uint40" },
    ],
    name: "Room_StatusEffectAlreadyActive",
  },
  { type: "error", inputs: [], name: "Room_TransferFailed" },
  { type: "error", inputs: [], name: "Room__AlreadyInitialized" },
] as const;
